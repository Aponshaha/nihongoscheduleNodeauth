{"ast":null,"code":"import _defineProperty from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/delete.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nexport default function DeleteTable() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/groups').then(response => response.json()).then(group => {\n      //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n      // })\n      let newData = _objectSpread({}, state);\n\n      newData.data = group; // const items = group.map((item, key) => { item.group = '1' }\n      // )\n      // console.log(newData.data, items);\n      //const sections = group.map((r, i) => { r.status = '1' });\n\n      setState(newData);\n    });\n  }, []);\n  return React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          let updateAt = -1;\n          data.forEach((value, index) => {\n            if (JSON.stringify(value, [\"Subject\", \"StartTime\", \"EndTime\"]) === JSON.stringify(oldData, [\"Subject\", \"StartTime\", \"EndTime\"])) {\n              updateAt = index;\n            }\n          });\n          data[updateAt] = newData;\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/delete.js"],"names":["React","useEffect","MaterialTable","DeleteTable","useState","columns","title","field","type","lookup","data","state","setState","fetch","then","response","json","group","newData","onRowAdd","Promise","resolve","setTimeout","push","onRowUpdate","oldData","updateAt","forEach","value","index","JSON","stringify","onRowDelete","prevState","splice","indexOf"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,0BACVH,KAAK,CAACI,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE,WAA9B;AAA2CC,MAAAA,IAAI,EAAE;AAAjD,KAHO,EAIP;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEE,MAAAA,MAAM,EAAE;AAAE,YAAI,UAAN;AAAkB,YAAI;AAAtB;AAHV,KAJO,CAD8B;AAWvCC,IAAAA,IAAI,EAAE;AAXiC,GAAf,CADU;AAAA;AAAA,QAC7BC,KAD6B;AAAA,QACtBC,QADsB;;AAiBpCX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI;AACb;AACA;AAEA,UAAIC,OAAO,qBAAQP,KAAR,CAAX;;AACAO,MAAAA,OAAO,CAACR,IAAR,GAAeO,KAAf,CALa,CAMb;AACA;AACA;AACA;;AACAL,MAAAA,QAAQ,CAACM,OAAD,CAAR;AAKD,KAjBH;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAsBA,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAEP,KAAK,CAACN,OAFjB;AAGE,IAAA,IAAI,EAAEM,KAAK,CAACD,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRS,MAAAA,QAAQ,EAAED,OAAO,IACf,IAAIE,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP,gBAAMX,IAAI,GAAG,CAAC,GAAGC,KAAK,CAACD,IAAV,CAAb;AACAA,UAAAA,IAAI,CAACa,IAAL,CAAUL,OAAV;AACAN,UAAAA,QAAQ,mBAAKD,KAAL;AAAWD,YAAAA;AAAX,aAAR;AACD,SALS,EAKP,GALO,CAAV;AAMD,OAPD,CAFM;AAURc,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIL,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP,gBAAMX,IAAI,GAAG,CAAC,GAAGC,KAAK,CAACD,IAAV,CAAb;AACA,cAAIgB,QAAQ,GAAG,CAAC,CAAhB;AACAhB,UAAAA,IAAI,CAACiB,OAAL,CAAa,CAACC,KAAD,EAAOC,KAAP,KAAe;AACxB,gBAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAqB,CAAC,SAAD,EAAW,WAAX,EAAuB,SAAvB,CAArB,MACCE,IAAI,CAACC,SAAL,CAAeN,OAAf,EAAuB,CAAC,SAAD,EAAW,WAAX,EAAuB,SAAvB,CAAvB,CADJ,EAEA;AAACC,cAAAA,QAAQ,GAAGG,KAAX;AAAiB;AACrB,WAJD;AAKAnB,UAAAA,IAAI,CAACgB,QAAD,CAAJ,GAAiBR,OAAjB;AACAN,UAAAA,QAAQ,mBAAKD,KAAL;AAAWD,YAAAA;AAAX,aAAR;AACD,SAXS,EAWP,GAXO,CAAV;AAYD,OAbD,CAXM;AAyBRsB,MAAAA,WAAW,EAAEP,OAAO,IAClB,IAAIL,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPT,UAAAA,QAAQ,CAACqB,SAAS,IAAI;AACpB,kBAAMvB,IAAI,GAAG,CAAC,GAAGuB,SAAS,CAACvB,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACwB,MAAL,CAAYxB,IAAI,CAACyB,OAAL,CAAaV,OAAb,CAAZ,EAAmC,CAAnC;AACA,qCAAYQ,SAAZ;AAAuBvB,cAAAA;AAAvB;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD;AA1BM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD","sourcesContent":["import React,{useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\nexport default function DeleteTable() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname' },\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ],\n    data: [\n      \n    ],\n  });\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/groups')\n      .then(response => response.json())\n      .then(group => {\n        //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n        // })\n\n        let newData = { ...state }\n        newData.data = group\n        // const items = group.map((item, key) => { item.group = '1' }\n        // )\n        // console.log(newData.data, items);\n        //const sections = group.map((r, i) => { r.status = '1' });\n        setState(newData)\n       \n\n\n\n      })\n  }, []);\n\n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.push(newData);\n              setState({...state,data});\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              let updateAt = -1\n              data.forEach((value,index)=>{\n                  if(JSON.stringify(value,[\"Subject\",\"StartTime\",\"EndTime\"]) \n                  === JSON.stringify(oldData,[\"Subject\",\"StartTime\",\"EndTime\"]))\n                  {updateAt = index}\n              })\n              data[updateAt] = newData;\n              setState({...state,data})\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}