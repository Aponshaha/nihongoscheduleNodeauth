{"ast":null,"code":"import _defineProperty from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/ViewStudens.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport MaterialTable from 'material-table';\nimport React, { useState, useEffect } from 'react';\nexport default function MaterialTableDemo() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Stuff Id',\n      field: 'stuff_id'\n    }, {\n      title: 'email',\n      field: 'email'\n    }, {\n      title: 'Section ',\n      field: 'group',\n      lookup: {\n        34: 'class 2',\n        63: 'class 4'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      stuffid: 'k1234567',\n      email: 'a@athuman',\n      group: 63\n    }, {\n      name: 'Zerya Betül',\n      stuffid: 'k123456',\n      email: 'b@athuman',\n      group: 34\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1]; //   componentDidMount = () =>{\n  //     fetch('http://gitscheduleapp.herokuapp.com/api/users')\n  //     .then(response => response.json())\n  //     .then(user => {\n  //         this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n  //         })\n  //     } )\n  //   }\n\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/users').then(response => response.json()).then(user => {\n      //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n      // })\n      let newData = _objectSpread({}, state);\n\n      newData.data = user;\n      this.items = this.state.newData.map((item, key) => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, item.name));\n      setState(newData);\n      console.log(newData.data, items);\n    });\n  }, []);\n  return React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          let updateAt = -1;\n          data.forEach((element, index) => {\n            if (JSON.stringify(element, [\"name\", \"stuff_id\", \"email\", \"group\"]) === JSON.stringify(oldData, [\"name\", \"stuff_id\", \"email\", \"group\"])) {\n              updateAt = index;\n            }\n          });\n          data[updateAt] = newData;\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/ViewStudens.js"],"names":["MaterialTable","React","useState","useEffect","MaterialTableDemo","columns","title","field","lookup","data","name","stuffid","email","group","state","setState","fetch","then","response","json","user","newData","items","map","item","key","id","console","log","onRowAdd","Promise","resolve","setTimeout","push","onRowUpdate","oldData","updateAt","forEach","element","index","JSON","stringify"],"mappings":"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","sourcesContent":["import MaterialTable from 'material-table';\nimport React, { useState, useEffect } from 'react';\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Stuff Id', field: 'stuff_id' },\n      { title: 'email', field: 'email' },\n      {\n        title: 'Section ',\n        field: 'group',\n        lookup: { 34: 'class 2', 63: 'class 4' },\n      },\n    ],\n    data: [\n      { name: 'Mehmet', stuffid: 'k1234567', email: 'a@athuman', group: 63 },\n      {\n        name: 'Zerya Betül',\n        stuffid: 'k123456',\n        email: 'b@athuman',\n        group: 34,\n      },\n    ],\n  });\n\n  //   componentDidMount = () =>{\n  //     fetch('http://gitscheduleapp.herokuapp.com/api/users')\n  //     .then(response => response.json())\n  //     .then(user => {\n  //         this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n  //         })\n  //     } )\n  //   }\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/users')\n      .then(response => response.json())\n      .then(user => {\n        //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n        // })\n\n        let newData = { ...state }\n        newData.data = user\n        this.items = this.state.newData.map((item, key) =>\n          <li key={item.id}>{item.name}</li>\n        );\n        setState(newData)\n        console.log(newData.data, items);\n\n\n\n      })\n  }, []);\n\n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.push(newData);\n              setState({ ...state, data });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n\n              let updateAt = -1\n              data.forEach((element, index) => {\n                if (JSON.stringify(element, [\"name\", \"stuff_id\", \"email\", \"group\"]) === JSON.stringify(oldData, [\"name\", \"stuff_id\", \"email\", \"group\"])) {\n                  updateAt = index\n                }\n              })\n              data[updateAt] = newData;\n              setState({ ...state, data });\n            }, 600);\n          })\n\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}