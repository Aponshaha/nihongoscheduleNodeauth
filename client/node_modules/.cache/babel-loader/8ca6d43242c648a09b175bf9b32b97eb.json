{"ast":null,"code":"import _defineProperty from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/delete.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nexport default function DeleteTable() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'Subject'\n    }, {\n      title: 'StartTime',\n      field: 'StartTime'\n    }, {\n      title: 'End Time',\n      field: 'EndTime'\n    }],\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/groups').then(response => response.json()).then(group => {\n      //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n      // })\n      let newData = _objectSpread({}, state);\n\n      newData.data = group; // const items = group.map((item, key) => { item.group = '1' }\n      // )\n\n      console.log('delete'); //const sections = group.map((r, i) => { r.status = '1' });\n\n      setState(newData);\n    });\n  }, []);\n\n  const onDelete = id => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/group', {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: this.id\n      })\n    }).then(res => res.json()).then(res => console.log('Data Deleted'));\n  };\n\n  return React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          let updateAt = -1;\n          data.forEach((value, index) => {\n            if (JSON.stringify(value, [\"Subject\", \"StartTime\", \"EndTime\"]) === JSON.stringify(oldData, [\"Subject\", \"StartTime\", \"EndTime\"])) {\n              updateAt = index;\n            }\n          });\n          data[updateAt] = newData;\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          console.log(oldData._id);\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/delete.js"],"names":["React","useEffect","MaterialTable","DeleteTable","useState","columns","title","field","data","state","setState","fetch","then","response","json","group","newData","console","log","onDelete","id","method","headers","body","JSON","stringify","_id","res","onRowAdd","Promise","resolve","setTimeout","push","onRowUpdate","oldData","updateAt","forEach","value","index","onRowDelete"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nexport default function DeleteTable() {\n    const [state, setState] = React.useState({\n        columns: [\n            { title: 'Name', field: 'Subject' },\n            { title: 'StartTime', field: 'StartTime' },\n            { title: 'End Time', field: 'EndTime' },\n\n        ],\n        data: [\n\n        ],\n    });\n\n    useEffect(() => {\n        fetch('http://gitscheduleapp.herokuapp.com/api/groups')\n            .then(response => response.json())\n            .then(group => {\n                //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n                // })\n\n                let newData = { ...state }\n                newData.data = group\n                // const items = group.map((item, key) => { item.group = '1' }\n                // )\n                console.log('delete');\n                //const sections = group.map((r, i) => { r.status = '1' });\n                setState(newData)\n            })\n    }, []);\n\n    const onDelete = (id) => {\n        fetch('http://gitscheduleapp.herokuapp.com/api/group', {\n            method: 'DELETE',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ _id: this.id })\n        })\n            .then(res => res.json()) \n            .then(res => console.log('Data Deleted'))\n\n    }\n\n\n\n    return (\n        <MaterialTable\n            title=\"Editable Example\"\n            columns={state.columns}\n            data={state.data}\n            editable={{\n                onRowAdd: newData =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            const data = [...state.data];\n                            data.push(newData);\n                            setState({ ...state, data });\n                        }, 600);\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            const data = [...state.data];\n                            let updateAt = -1\n                            data.forEach((value, index) => {\n                                if (JSON.stringify(value, [\"Subject\", \"StartTime\", \"EndTime\"])\n                                    === JSON.stringify(oldData, [\"Subject\", \"StartTime\", \"EndTime\"])) { updateAt = index }\n                            })\n                            data[updateAt] = newData;\n                            setState({ ...state, data })\n                        }, 600);\n                    }),\n                onRowDelete: oldData =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n\n                            console.log(oldData._id);\n\n                        }, 600);\n                    }),\n\n            }}\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}