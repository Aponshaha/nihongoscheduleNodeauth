{"ast":null,"code":"import _defineProperty from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/aponsaha/Desktop/Node/React/schedulefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/delete.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nexport default function DeleteTable() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'Subject'\n    }, {\n      title: 'StartTime',\n      field: 'StartTime'\n    }, {\n      title: 'End Time',\n      field: 'EndTime'\n    }],\n    data: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/groups').then(response => response.json()).then(group => {\n      //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n      // })\n      let newData = _objectSpread({}, state);\n\n      newData.data = group; // const items = group.map((item, key) => { item.group = '1' }\n      // )\n\n      console.log('delete'); //const sections = group.map((r, i) => { r.status = '1' });\n\n      setState(newData);\n    });\n  }, []);\n  return React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          let updateAt = -1;\n          data.forEach((value, index) => {\n            if (JSON.stringify(value, [\"Subject\", \"StartTime\", \"EndTime\"]) === JSON.stringify(oldData, [\"Subject\", \"StartTime\", \"EndTime\"])) {\n              updateAt = index;\n            }\n          });\n          data[updateAt] = newData;\n          setState(_objectSpread({}, state, {\n            data\n          }));\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          console.log(oldData);\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/aponsaha/Desktop/Node/React/schedulefront/src/component/delete.js"],"names":["React","useEffect","MaterialTable","DeleteTable","useState","columns","title","field","data","state","setState","fetch","then","response","json","group","newData","console","log","onRowAdd","Promise","resolve","setTimeout","push","onRowUpdate","oldData","updateAt","forEach","value","index","JSON","stringify","onRowDelete"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\nexport default function DeleteTable() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Name', field: 'Subject' },\n      { title: 'StartTime', field: 'StartTime' },\n      { title: 'End Time', field: 'EndTime' },\n      \n    ],\n    data: [\n      \n    ],\n  });\n\n  useEffect(() => {\n    fetch('http://gitscheduleapp.herokuapp.com/api/groups')\n      .then(response => response.json())\n      .then(group => {\n        //this.setState({data: user, loading: false},()=>{console.log('state',this.state.data);\n        // })\n\n        let newData = { ...state }\n        newData.data = group\n        // const items = group.map((item, key) => { item.group = '1' }\n        // )\n         console.log('delete');\n        //const sections = group.map((r, i) => { r.status = '1' });\n        setState(newData)\n      })\n  }, []);\n  \n\n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.push(newData);\n              setState({...state,data});\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              let updateAt = -1\n              data.forEach((value,index)=>{\n                  if(JSON.stringify(value,[\"Subject\",\"StartTime\",\"EndTime\"]) \n                  === JSON.stringify(oldData,[\"Subject\",\"StartTime\",\"EndTime\"]))\n                  {updateAt = index}\n              })\n              data[updateAt] = newData;\n              setState({...state,data})\n            }, 600);\n          }),\n          onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              console.log(oldData);\n              \n            }, 600);\n          }),\n\n      }}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}